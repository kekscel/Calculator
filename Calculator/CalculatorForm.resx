<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIwAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAA
        ACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAjAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAYAAAALgAAAC/AAAAvgAAAL4AAAC+AAAAwAAA
        AMAAAADAAAAAvgAAAL4AAAC+AAAAvgAAAMAAAADAAAAAwAAAAL4AAAC+AAAAvgAAAL8AAAC4AAAAYAAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEAAADFAAAAVQAAAD8AAABBAAAAQQAA
        AD4AAAAmAAAAIAAAACYAAAA+AAAAQQAAAEEAAAA+AAAAJgAAACAAAAAmAAAAPgAAAEEAAABBAAAAPwAA
        AFUAAADFAAAAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAuQAAAFUAAAB8AAAAxQAA
        AMAAAADAAAAAxQAAAIAAAAAKAAAAgAAAAMUAAADAAAAAwAAAAMUAAACAAAAACgAAAIAAAADFAAAAwAAA
        AMAAAADFAAAAfAAAAFUAAAC5AAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAADAAAAAQAAA
        AMMAAABEAAAAHwAAAB8AAABEAAAAwwAAADoAAADDAAAARAAAAB8AAAAfAAAARAAAAMMAAAA6AAAAwwAA
        AEQAAAAfAAAAHwAAAEQAAADDAAAAQAAAAMAAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAA
        AMAAAABBAAAAwAAAACEAAAAAAAAAAAAAACEAAADAAAAAQQAAAMAAAAAhAAAAAAAAAAAAAAAhAAAAwAAA
        AEEAAADAAAAAIQAAAAAAAAAAAAAAIQAAAMAAAABBAAAAwAAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAhAAAAwAAAAD4AAADDAAAARAAAAB8AAAAfAAAARAAAAMMAAAA6AAAAwwAAAEQAAAAfAAAAHwAA
        AEQAAADDAAAAPgAAAMAAAAAhAAAAAAAAAAAAAAAhAAAAwAAAAEEAAADAAAAAIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACEAAADBAAAAJgAAAH8AAADGAAAAwAAAAMAAAADGAAAAgQAAAAoAAACBAAAAxgAA
        AMAAAADAAAAAxgAAAH8AAAAmAAAAwQAAACEAAAAAAAAAAAAAACEAAADAAAAAQQAAAMAAAAAhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAMIAAAAgAAAACwAAADoAAABBAAAAQQAAADoAAAANAAAAAAAA
        AA0AAAA6AAAAQQAAAEEAAAA6AAAACwAAACAAAADCAAAAIQAAAAAAAAAAAAAAIQAAAMAAAABBAAAAwAAA
        ACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAwQAAACYAAAB/AAAAxQAAAMAAAADAAAAAxgAA
        AIEAAAAKAAAAgQAAAMUAAADAAAAAwAAAAMYAAAB/AAAAJgAAAMEAAAAhAAAAAAAAAAAAAAAhAAAAwAAA
        AEEAAADAAAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAADAAAAAPgAAAMMAAABEAAAAHwAA
        AB8AAABEAAAAwwAAADoAAADDAAAARAAAAB8AAAAfAAAARAAAAMMAAAA+AAAAwAAAACEAAAAAAAAAAAAA
        ACEAAADAAAAAQQAAAMAAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAMAAAABBAAAAwAAA
        ACEAAAAAAAAAAAAAACEAAADAAAAAQQAAAMAAAAAhAAAAAAAAAAAAAAAhAAAAwAAAAEEAAADAAAAAIQAA
        AAAAAAAAAAAAIQAAAMAAAABBAAAAwAAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAwAAA
        AD4AAADDAAAARAAAAB8AAAAfAAAARAAAAMMAAAA6AAAAwwAAAEQAAAAfAAAAHwAAAEQAAADDAAAAOgAA
        AMMAAABEAAAAHwAAAB8AAABEAAAAwwAAAD4AAADAAAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACEAAADBAAAAJgAAAH8AAADGAAAAwAAAAMAAAADGAAAAgQAAAAoAAACBAAAAxgAAAMAAAADAAAAAxgAA
        AIEAAAAKAAAAgQAAAMYAAADAAAAAwAAAAMYAAAB/AAAAJgAAAMEAAAAhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIQAAAMIAAAAgAAAACwAAADoAAABBAAAAQQAAADoAAAANAAAAAAAAAA0AAAA6AAAAQQAA
        AEEAAAA6AAAADQAAAAAAAAANAAAAOgAAAEEAAABBAAAAOgAAAAsAAAAgAAAAwgAAACEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAhAAAAwQAAACYAAAB/AAAAxQAAAMAAAADAAAAAxgAAAIEAAAAKAAAAgQAA
        AMUAAADAAAAAwAAAAMYAAACBAAAACgAAAIEAAADFAAAAwAAAAMAAAADGAAAAfwAAACYAAADBAAAAIQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAADAAAAAPgAAAMMAAABEAAAAHwAAAB8AAABEAAAAwwAA
        ADoAAADDAAAARAAAAB8AAAAfAAAARAAAAMMAAAA6AAAAwwAAAEQAAAAfAAAAHwAAAEQAAADDAAAAPgAA
        AMAAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAMAAAABBAAAAwAAAACEAAAAAAAAAAAAA
        ACEAAADAAAAAQQAAAMAAAAAhAAAAAAAAAAAAAAAhAAAAwAAAAEEAAADAAAAAIQAAAAAAAAAAAAAAIQAA
        AMAAAABBAAAAwAAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAwAAAAD4AAADDAAAARAAA
        AB8AAAAfAAAARAAAAMMAAAA6AAAAwwAAAEQAAAAfAAAAHwAAAEQAAADDAAAAOgAAAMMAAABEAAAAHwAA
        AB8AAABEAAAAwwAAAD4AAADAAAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAADBAAAAJgAA
        AIAAAADHAAAAwgAAAMIAAADHAAAAgQAAAAoAAACBAAAAxwAAAMIAAADCAAAAxwAAAIEAAAAKAAAAgQAA
        AMcAAADCAAAAwgAAAMcAAACAAAAAJgAAAMEAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAA
        AMIAAAAgAAAABAAAABsAAAAfAAAAHwAAABsAAAAFAAAAAAAAAAUAAAAbAAAAHwAAAB8AAAAbAAAABQAA
        AAAAAAAFAAAAGwAAAB8AAAAfAAAAGwAAAAQAAAAgAAAAwgAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAhAAAAwgAAACAAAAAEAAAAGwAAAB8AAAAfAAAAHwAAACAAAAAhAAAAIAAAAB8AAAAfAAAAHwAA
        AB8AAAAgAAAAIQAAACAAAAAfAAAAHwAAAB8AAAAbAAAABAAAACAAAADCAAAAIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACEAAADBAAAAJgAAAIAAAADHAAAAwgAAAMIAAADCAAAAwgAAAMIAAADCAAAAwgAA
        AMIAAADCAAAAwgAAAMIAAADCAAAAwgAAAMEAAAC+AAAAvgAAAMYAAACAAAAAJgAAAMEAAAAhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAMAAAAA+AAAAwwAAAEQAAAAfAAAAIQAAACEAAAAhAAAAIQAA
        ACEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAgAAAALgAAAIMAAACBAAAAUQAAAMIAAAA+AAAAwAAA
        ACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAwAAAAEEAAADAAAAAIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhAAAAxQAAAMMAAACCAAAAvAAA
        AEEAAADAAAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAADAAAAAQQAAAMAAAAAhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMAAACCAAAAgAAA
        AKMAAAC8AAAAQQAAAMAAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAAAMAAAABBAAAAwAAA
        ACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQAA
        AMUAAADDAAAAggAAALwAAABBAAAAwAAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAAwAAA
        AEAAAADDAAAARAAAAB8AAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAAACEAAAAhAAAAIQAA
        ACAAAAAuAAAAhAAAAIIAAABRAAAAwgAAAEAAAADAAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAAC5AAAAVQAAAHwAAADFAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAA
        AMAAAADAAAAAwAAAAL8AAAC8AAAAvAAAAMQAAAB8AAAAVQAAALkAAAAOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGEAAADFAAAAVQAAAD8AAABBAAAAQQAAAEEAAABBAAAAQQAAAEEAAABBAAAAQQAA
        AEEAAABBAAAAQQAAAEEAAABBAAAAQQAAAEEAAABBAAAAPwAAAFUAAADFAAAAYQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAGAAAAC4AAAAvwAAAL4AAAC+AAAAvgAAAL4AAAC+AAAAvgAA
        AL4AAAC+AAAAvgAAAL4AAAC+AAAAvgAAAL4AAAC+AAAAvgAAAL4AAAC/AAAAuAAAAGEAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAjAAAAJQAAACUAAAAlAAAAJQAA
        ACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACUAAAAlAAAAJQAAACMAAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAP/AAAA/wAAAP4AAAB+AAAAfgwYMH4AADB+AAAwfgCAMH4AADB+AA
        AwfgwYMH4AAAB+AAAAfgCBAH4AAAB+AAAAfgwYMH4AAAB+AAAAfgCBAH4AAAB+AAAAfgAAAH4P/4B+D/
        +Afg//gH4AAAB+AAAAfwAAAP8AAAD/wAAD8=
</value>
  </data>
</root>